This is the second attempt to port Pelican to Python 3.
It runs on Python 2 and 3 without changes, and 2to3 does not need
to be run.

At the time of this writing, all tests pass on Python 2 as well as
on Python 3.

In the first attempt I had used 2to3 and applied manually corrections to
achieve syntactical correctness. But as the tests show, more subtle bugs in the
string handling (e.g. outputting b'...' instead of '...') remain.

Also the code was suitable for Python 3 only.

In this second attempt, I applied changes 2to3 would have made carefully
manually, and also stayed compatible with Python 2 syntax.


manual 2to3:
============

isinstance(.., basestring) -> isinstance(.., six.string_types)

isinstance(.., unicode) -> isinstance(.., six.text_type)

Treating *all* string variables as unicode:
--> remove decode(), encode(), str(), unicode()
--> input values must be decoded to unicode as soon as possible:
    --> where it's read from file
	--> where user input is accepted
	--> etc
	--> no more conversion inside the code

Use Django's decorator to provide __str__() and __unicode__() for
both Python versions simultaneously.

Upgraded BeautifulSoup to bs4 (only bs4 supports Py3k). For parsing XML
like in the WordPress importer, also lxml is required now!
Also, convertEntities is no longer supported!

Kept range() almost everywhere as-is (2to3 suggests list(range())), just changed
it where I felt necessary.

Changed xrange() back to range(), so its valid in both Python versions.

OUCH!! setlocale() in Python 2 bails when we give the locale name as unicode,
and since we're using from __future__ import unicode_literals, we do that everywhere!
As a workaround, I enclosed the localename with str(); in Python 2 this casts the
name to a byte string, in Python 3 this should do nothing, because the locale name
already had been unicode.

Octal literals -- love them --, in Python 2 you write them like "0755", this is
invalid for Python 3 where it must be "0o755". Changed them into decimal number.


Potential issues:
=================

1
-

In contents.py, ll 97pp, a block of code used encode() and decode() which would have
had to be changed (grammar ok? ;)) for Py3k. Unfortunately, I was not able to decipher
the purpose of those lines, so I just commented them out. Hah, if we believe the test
suite, no bugs were introduced by this.
==> Behaviour on Win32 needs testing, since the commented out block contains a line
    esp. for that platform.

2
-

The script pelican_quickstart fetches several times user input from the console. In
Python 2 this is accomplished by function raw_input(), that returns str (bytes),
and which does not longer exist on Python 3. The method there is input() which
returns str (unicode). I have written a compatibility method to flatten out these
differences and which always returns unicode. To do this on Python 2, it decodes
the input from UTF-8.
==> It should be tested if input from consoles with a non-UTF-8 locale gets
    mangled up.

